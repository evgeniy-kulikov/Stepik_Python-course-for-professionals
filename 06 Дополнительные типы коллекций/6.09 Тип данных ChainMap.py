# 6.9 Тип данных ChainMap
""""""

"""
ChainMap, который представляет из себя объединение нескольких словарей. 
Этот объект группирует несколько словарей вместе, что позволяет рассматривать их как единое целое.
"""
from collections import ChainMap

empty_chain_map = ChainMap()  # ChainMap({})

numbers = {'one': 1, 'two': 2}
letters = {'a': 'A', 'b': 'B'}

chain_map = ChainMap(numbers, letters)  # создаем ChainMap объект на основе словарей numbers и letters
print(chain_map)        # ChainMap({'one': 1, 'two': 2}, {'a': 'A', 'b': 'B'})


"""
Для получения значений по ключу в ChainMap объектах используется такой же механизм, 
как и в обычных словарях (тип dict). 
Либо мы используем квадратные скобки, либо метод get()
"""
print(chain_map['one'])  # 1
print(chain_map.get('a'))  # A
print(chain_map.get('c', False))  # False

"""
когда у объединяемых словарей есть повторяющиеся ключи, 
мы получаем только значение из первого словаря, в котором встречается этот ключ. 
Таким образом, поиск по ChainMap объекту всегда осуществляется в том же порядке, 
в котором словари были указаны при создании ChainMap объекта, 
при этом поиск останавливается, как только значение по нужному ключу найдено.

Итерирование по ChainMap объекту происходит в обратном порядке от последнего указанного словаря к первому.
При этом если в ChainMap объекте есть повторяющиеся ключи в объединяемых словарях, 
то мы будем получать первое из значений.
можем использовать методы keys(), values(), items()
"""
from collections import ChainMap

for_adoption = {'dogs': 15, 'cats': 8, 'pythons': 9}
vet_treatment = {'dogs': 7, 'cats': 2, 'tigers': 3}

pets = ChainMap(for_adoption, vet_treatment)

for key in pets:
    print(key, '->', pets[key])

# dogs -> 15
# cats -> 8
# tigers -> 3
# pythons -> 9

"""
Для изменения объектов типа ChainMap мы можем использовать те же способы, 
что и для изменения обычного словаря (тип dict). 
Мы можем обновлять, добавлять, удалять и извлекать элементы из ChainMap объекта. 

! ! !
При этом нужно знать, что все эти операции действуют только на ПЕРВЫЙ из объединяемых словарей.
При попытке удаления значения по ключу, которого нет в первом словаре, возникает ошибка KeyError, 
даже если указанный ключ есть в одном из объединяемых словарей, кроме первого.
! ! !
"""

"""
Встроенная функция len() возвращает количество УНИКАЛЬНЫХ ключей ChainMap объекта.

ChainMap может обновлять (изменять, вставлять и удалять) значения ключей только в первом словаре, 
в то время как поиск ключей осуществляется по всем словарям в списке.
"""


"""   *   *   *   Task   *   *   *   """


#  6.9-1
"""
Зоопарк
Определить, сколько всего животных обитает в зоопарке
Input:  zoo.json
Output: 443
"""
import json
from collections import ChainMap

with open('zoo.json', encoding='utf-8') as file:
    animals = json.load(file)

total = ChainMap(*animals)
print(sum(total.values()))


#  6.9-2
"""
Булочный магнат
На вход подается последовательность ингредиентов.
определить общую стоимость введенных ингредиентов и вывести полученный результат, 
в котором указаны ингредиенты в лексикографическом порядке, количество каждых и их общая стоимость, 
в следующем формате:
<ингредиент 1> x <количество 1>
<ингредиент 2> x <количество 2>
...
-------------------------------
ИТОГ: <общая стоимость>р

Input:  tests_3094419.zip
Output: tests_3094419.zip
"""
from collections import ChainMap, Counter

bread = {'булочка с кунжутом': 15, 'обычная булочка': 10, 'ржаная булочка': 15}
meat = {'куриный бифштекс': 50, 'говяжий бифштекс': 70, 'рыбный бифштекс': 40}
sauce = {'сливочно-чесночный': 15, 'кетчуп': 10, 'горчица': 10, 'барбекю': 15, 'чили': 15}
vegetables = {'лук': 10, 'салат': 15, 'помидор': 15, 'огурцы': 10}
toppings = {'сыр': 25, 'яйцо': 15, 'бекон': 30}


menu = ChainMap(bread, meat, sauce, vegetables, toppings)
order = input().split(',')
dash = max(map(len, order))
food = Counter(order)
total = 0
num = len(str(max(food.values())))

for k, v in sorted(food.items()):
    print(f'{k.ljust(dash)} x {v}')
    total += menu[k] * v

print('-' * max(len(str(total)) + 7, dash + num + 3), f'ИТОГ: {total}р', sep='\n')
