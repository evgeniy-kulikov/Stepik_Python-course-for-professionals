# 11.8 –ú–æ–¥—É–ª—å re.
""""""


"""   *   *   *   Task   *   *   *   """


#  11.08-1
"""
–§—É–Ω–∫—Ü–∏—è normalize_jpeg()
https://stepik.org/lesson/680266/step/9?unit=678924
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é normalize_jpeg(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:
filename ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, –∏–º–µ—é—â–µ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ jpeg –∏–ª–∏ jpg, 
–∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω–æ –±—É–∫–≤–∞–º–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º ‚Äî jpg
"""
from re import sub

def normalize_jpeg(filename):
    reg = r'(?i)\.jpe?g$'
    return sub(reg, r'.jpg', filename)


print(normalize_jpeg('stepik.jPeG'))
# stepik.jpg

print(normalize_jpeg('mountains.JPG'))
# mountains.jpg

print(normalize_jpeg('windows11.jpg'))
# windows11.jpg

print(normalize_jpeg('jpg.jPg.Jpg.JPG'))
# jpg.jPg.Jpg.jpg


#  11.08-2
"""
–§—É–Ω–∫—Ü–∏—è normalize_whitespace()
https://stepik.org/lesson/680266/step/10?unit=678924
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é normalize_whitespace(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:
string ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∑–∞–º–µ–Ω—è—Ç—å –≤—Å–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ string –Ω–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–±–µ–ª 
–∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
Input:  *
Output: *
"""
from re import sub

def normalize_whitespace(string):
    reg = r'\s{2,}'
    return sub(reg, r' ', string)


print(normalize_whitespace('AAAA                A                AAAA'))
# AAAA A AAAA

print(normalize_whitespace('–¢—É—Ç –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤'))
# –¢—É—Ç –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤

print(normalize_whitespace('–¢—É—Ç   –Ω   –µ   —Ç     –ª   –∏     —à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤     '))
# –¢—É—Ç –Ω –µ —Ç –ª –∏ —à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤


#  11.08-3
"""
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
https://stepik.org/lesson/680266/step/11?unit=678924
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞.
–í –≤–≤–µ–¥–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ) –Ω–∞ —Å—Ç—Ä–æ–∫—É <kw> –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

import keyword
print(keyword.kwlist)
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 
'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 
'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
"""
from re import sub, I
import keyword

def rep_kw(word):
    s = word.group()
    if s.lower() in [i.lower() for i in keyword.kwlist]:
        return '<kw>'
    return s

res = sub(r'(?i)\w+', rep_kw, input())
# res = sub(r'\b(\w+)\b', rep_kw, input(), flags=I)
print(res)


# –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
import re
import keyword

keys = '|'.join(keyword.kwlist)
print(re.sub(fr"\b({keys})\b", r'<kw>', input(), flags=re.I))

# True, assert, as, false, or, Import
# <kw>, <kw>, <kw>, <kw>, <kw>, <kw>

# True or False - that's the question
# <kw> <kw> <kw> - that's the question

# True and False - that is the question
# <kw> <kw> <kw> - that <kw> the question


#  11.08-4
"""
–ü–µ—Ä–≤—ã–µ –±—É–∫–≤—ã
https://stepik.org/lesson/680266/step/12?unit=678924
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ –ø–µ—Ä–≤—ã–µ –¥–≤–µ –±—É–∫–≤—ã –≤ –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ, 
—Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ –¥–≤—É—Ö –∏–ª–∏ –±–æ–ª–µ–µ –±—É–∫–≤.
"""
from re import sub

# –û–∂–∏–¥–∞–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ
res = sub(r'\b(\w)(\w)', r'\2\1', input())
print(res)


# –ü—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
def rev(word):
    s = word.group()
    if len(s) >= 2:
        return s[1] + s[0] + s[2:]
    return s

res = sub(r'\w+', rev, input())
print(res)


# This is Python
# hTis si yPthon
#
# Hi, everyone. Lets start a lesson!
# iH, veeryone. eLts tsart a elsson!



#  11.08-5
"""
–£–º–Ω–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
https://stepik.org/lesson/680266/step/13?unit=678924
–ù–∞–∑–æ–≤–µ–º —É–º–Ω–æ–∂–µ–Ω–∏–µ–º —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–∏—Å–ª–æ –∑–∞–ø–∏—Å—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ n(string), 
–≥–¥–µ n ‚Äî –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, 
–∞ string ‚Äî —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∞ n —Ä–∞–∑. 
–†–∞—Å–∫—Ä—ã—Ç–∏–µ–º —É–º–Ω–æ–∂–µ–Ω–∏—è –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏, 
–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∞ ti2(Be)3(Ge) –ø–æ—Å–ª–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –≤ –Ω–µ–π –≤—Å–µ—Ö —É–º–Ω–æ–∂–µ–Ω–∏–π –±—É–¥–µ—Ç –∏–º–µ—Ç—å –≤–∏–¥ tiBeBeGeGeGe.
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ —É–º–Ω–æ–∂–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–µ –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ –≤ –ø–æ–¥–∞–≤–∞–µ–º–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å–∞–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ç–æ –µ—Å—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ n(string)
"""
from re import subn

st = input()
cnt = 1
reg = r'(\d+)\((\w*)\)'

def fanc(obj):
    return obj.group(2) * int(obj.group(1))

while cnt:
    st, cnt = subn(reg, fanc, st)
print(st)


# –ö–æ—Ä–æ—á–µ
from re import subn

st = input()
cnt = 1
reg = r'(\d+)\((\w*)\)'

while cnt:
    st, cnt = subn(r'(\d+)\((\w*)\)', lambda m: m[2] * int(m[1]), st)
print(st)


# hello3(world)hi
# helloworldworldworldhi

# 0(s)he0(be)lie0(ve)d
# helied

# bbbb10(2(a))bbb
# bbbbaaaaaaaaaaaaaaaaaaaabbb

# hi2(priv3(d3(i)dd)qq)b0(pr)qwqdd
# hiprivdiiidddiiidddiiiddqqprivdiiidddiiidddiiiddqqbqwqdd

# hhhhhh
# hhhhhh


#  11.08-6
"""
–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–ª–æ–≤–∞ üå∂Ô∏è
https://stepik.org/lesson/680266/step/14?unit=678924
–í –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–µ —Å–ª–æ–≤–∞ –Ω–∞ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
* –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É, —Ç–æ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–æ–≤–∞ python –∏ Python —Å—á–∏—Ç–∞—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏.
"""
from re import sub

reg = r'(\b\w+\b)(\W+\1\b)+'

print(sub(reg, r'\1', input()))

# beegeek,beegeek,beegeek! python python.. Python.. stepik?stepik?stepik
# beegeek! python.. Python.. stepik

# hi, hi, hi, hello, hello, HELLO, HELLO, HELLO, HELLO, hello!
# hi, hello, HELLO, hello!

# wow Wow wow WOW
# wow Wow wow WOW


#  11.08-7
"""
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ üå∂Ô∏èüå∂Ô∏è
https://stepik.org/lesson/680266/step/15?unit=678924
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å—Ç—Ä–æ–∫, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Å–æ–±–æ–π Python –∫–æ–¥.
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—é –∑–∞–¥–∞—á–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
Input:  *
Output: *
"""
import re
import sys

regex = r'\n#.*?$|' \
        r'\s*""".*?"""|' \
        r'\n? *#.*?$'

s = sys.stdin.read()
print(re.sub(regex, '', s, flags=re.S | re.M))


# –í–∞—Ä–∏–∞–Ω—Ç
import re
import sys

text = sys.stdin.read()
# text = re.sub(re.compile('^ *\"\"\"[\w \n]*\"\"\"[\n]', re.MULTILINE), "", text)
# text = re.sub(r'^ *#.*[\n]', "", text, flags=re.MULTILINE)
# text = re.sub(r" *#.*$", "", text, flags=re.MULTILINE)
# print(text)

patterns = [r"(^ *\"\"\"[\w \n]*\"\"\"[\n])", r"(^ *#.*[\n])", r"( *#.*$)"]
for pattern in patterns:
    for match in re.finditer(pattern, text, flags=re.MULTILINE):
        s = match.group()
        text = text.replace(s, " ")
print(text)



