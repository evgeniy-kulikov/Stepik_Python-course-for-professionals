#  11.4 Регулярные выражения
""""""


"""   *   *   *   Task   *   *   *   """


# 01
"""
соответствуют слова a, A, an и An
Input:  An acle, a Ancle, A antarktida, an Any
Output: An a A an
"""
regex = r'\b[aA]n?\b'


# 02
"""
строго заглавными латинскими буквами
Input:  My progress in the APP synchrONized in the WEB version?
Output: APP WEB
"""
regex = r'\b[A-Z]+\b'


# 03
"""
выражение, которому соответствуют слова, начинающиеся с латинской заглавной буквы.
Input:  How are --U--
Output: How U
"""
regex = r'\b[A-Z]\w*\b'


# 04
"""
строки, содержащие открывающую круглую скобку, а за ней когда-нибудь закрывающую круглую скобку.
Input:  (41 + 9) * 2 = ?
Output: (41 + 9) * 2 = ?
"""
# regex = r'^[^\(]*\(.*\)[^\(]*$'
regex = r'^.*\(.*\).*$'


# 05
"""
* строка начинается с двух или более цифр
* после следуют ноль или более букв латинского алфавита в нижнем регистре
* строка оканчивается нулем или более букв латинского алфавита в верхнем регистре
Input:  51tePIK
Output: 51tePIK
"""
regex = r'^\d{2,}[a-z]*[A-Z]*$'


# 06
"""
* строка содержит исключительно буквы латинского алфавита в произвольном регистре
* строка оканчивается латинской буквой s в нижнем регистре
Input:  Chess
Output: Chess
"""
regex = r'^[a-zA-Z]*s$'


# 07
"""
* первые 40 символов являются либо латинскими буквами произвольного регистра, либо четными цифрами
* последние 5 символов являются либо нечетными цифрами, либо символами пробела
Input:  BTJubHCvbwTQEN2BqQJsgAIDW4bcyFyUp4COdUO4 3791
Output: BTJubHCvbwTQEN2BqQJsgAIDW4bcyFyUp4COdUO4 3791
"""
regex = r'(?i)[a-z02468]{40}[13579\s]{5}'


# 08
"""
* строка начинается с Mr., Mrs., Ms., Dr. или Er.
* оставшаяся часть строки состоит только из одной или более букв латинского алфавита в произвольном регистре
Input:  Ms.Jones
Output: Ms.Jones
"""
regex = r'^(?:Mrs?\.|Ms\.|[DE]r\.)[a-xA-Z]+$'
# regex = r'^(?:Mrs\.|Ms\.|[DEM]r\.)[a-xA-Z]+$'


# 09
"""
* строка начинается с одной или двух цифр
* после следуют три или более буквы латинского алфавита в произвольном регистре
* оставшаяся часть строки содержит от 0 до 3 точек включительно
Input:  71mur...
Output: 71mur...
"""
regex = r'(?:)\d{1,2}[a-z]{3,}\.{,3}'
